@allure.step("Select SumoSelect option: {group_label} -> {option_text}")
def select_sumo_dropdown_by_group(
    self, 
    dropdown_class: str, 
    group_label: str, 
    option_text: str
) -> None:
    """
    Select from SumoSelect dropdown by specifying both optgroup and option
    
    Args:
        dropdown_class: Class of the SumoSelect div (e.g., 'sumo_accountType')
        group_label: The optgroup label (e.g., 'PB Accounts')
        option_text: Text of the option to select (e.g., 'New Account')
    """
    try:
        logger.info(f"Selecting '{option_text}' from group '{group_label}' in SumoSelect '{dropdown_class}'")
        
        # Click to open dropdown
        self.page.locator(f'div.SumoSelect.{dropdown_class} p.CaptionCont.SelectBox').click()
        
        # Wait for options
        self.page.wait_for_timeout(500)
        
        # Click the specific option under the specific group using XPath
        xpath = f'//div[contains(@class, "SumoSelect") and contains(@class, "{dropdown_class}")]//li[@class="group"]//label[text()="{group_label}"]/following-sibling::ul//li[@class="opt"]//label[text()="{option_text}"]'
        self.page.locator(xpath).click()
        
        logger.success(f"Successfully selected '{option_text}' from '{group_label}'")
    except Exception as e:
        logger.error(f"Failed to select SumoSelect option: {str(e)}")
        raise
    ###
    def test_select_new_account_from_pb_accounts(page):
    generic_actions = GenericActions(page)
    
    # Select "New Account" specifically from "PB Accounts" group
    generic_actions.select_sumo_dropdown_by_group(
        dropdown_class='sumo_accountType',
        group_label='PB Accounts',
        option_text='New Account'
    )
    
    # Verify selection
    selected_text = generic_actions.get_text('p.CaptionCont.SelectBox label')
    assert "New Account" in selected_text

def test_select_new_account_from_etd_execution(page):
    generic_actions = GenericActions(page)
    
    # Select "New Account" from different group
    generic_actions.select_sumo_dropdown_by_group(
        dropdown_class='sumo_accountType',
        group_label='ETD Execution Accounts',
        option_text='New Account'
    )

@@@
@allure.step("Select SumoSelect option: {group_label} -> {option_text}")
def select_sumo_dropdown_by_group_css(
    self, 
    dropdown_class: str, 
    group_label: str, 
    option_text: str
) -> None:
    """Select from SumoSelect using CSS selectors with filtering"""
    try:
        logger.info(f"Selecting '{option_text}' from group '{group_label}'")
        
        # Click to open dropdown
        self.page.locator(f'div.SumoSelect.{dropdown_class} p.CaptionCont.SelectBox').click()
        
        # Wait for options
        self.page.wait_for_timeout(500)
        
        # Find all group li elements
        groups = self.page.locator(f'div.SumoSelect.{dropdown_class} li.group').all()
        
        # Find the correct group and click the option
        for group in groups:
            group_label_elem = group.locator('> label').first
            if group_label_elem.inner_text() == group_label:
                # Found the right group, now click the option
                group.locator(f'ul li.opt label:has-text("{option_text}")').click()
                break
        
        logger.success(f"Successfully selected '{option_text}' from '{group_label}'")
    except Exception as e:
        logger.error(f"Failed to select SumoSelect option: {str(e)}")
        raise

###
# Method 1: Using XPath (Recommended - more precise)
generic_actions.select_sumo_dropdown_by_group('sumo_accountType', 'PB Accounts', 'New Account')

# Method 2: Using CSS with Python filtering
generic_actions.select_sumo_dropdown_by_group_css('sumo_accountType', 'PB Accounts', 'New Account')